<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQMAAADCCAMAAAB6zFdcAAAABGdBTUEAALGPC/xhBQAAARRQTFRF////
        AGcyjcEJAGYy///+AGYv//3+AGUwAGUz9fv5//79AGEpAGgx/f//NnxVAGQtVY5uJnFJAF8jh7oAAGEm
        AFkd///5jbWe1ubfjr8JiLoAhr0AAFcdAF4mAFkYAF4r/f/yAFUVAF4vAFgitdHCrtBpl7417PTPwtqO
        2+u4zuGf+f/r0eSo8fv14e7nl7qmyd7SfKePR4NhwtnKGGtAYpR28/rd5PDEpstbn8VIt9Byr89rj7wb
        u9eCj70upsZYocRNvNl/m8U76ezrssa9psOzOXpYhbCV1uuzV5FwdKWJoMix0+vcSYZrkb2i6/PeAEQA
        XYtzl7OlAFw3dpuIKWlKbaiGTJFqqcy3hKiXAE8CMXxPLV+bAwAAFxlJREFUeF7tnQl72ki2houWShIg
        RUZImBjEntixI7EY7Dhx1mk73W5netKTeyd98///x/1OqZAEBkzST9vCw5sF0Ibq6Gy1wrZs2bJly5Yt
        W7Zs2bJly5YtGcNiTBV/WSHaILCwmf6ptOPBg0Ki8FRevK+0BBUquaapKv2jHQ8aFFPoQOvk9PnBkxdn
        T4mzd29fHjw/PamII+i/B4wKUP79w1dn57Va7acYfKiVz89ePSc5aPLoB4iqWpaqtk7fv9lLFz9Nrbb3
        4fV+BYIqFB6ma1CZuv/6TXlJ+SMeP3689/TgRDiHh2gWlWcv9vZEQUVxl1Pbe3IKm3hQIkAcKGiVX56W
        ZRmXyeCx3IGX8tkzmMTDkYKmWdCBs9qtzx9MxQBleHf6gGSgaurJE2EEt7B3/uYdAob89Hjv5dHDiRGV
        g72VjjCi/OFwv1WpHB1IcT3+qXb+vBKlExsNFWD/7a0SQHnPnrXkKYfSb8AshCpoUKRo12aCtPD5eVSk
        pZAL2DtsMa0giqpVnkbbib03pyqco8ggNxWtdYCnuloPSAlOklCoqS/lDkH5sLLZasCOXpSR9sjiLKP8
        9siqFITlq1Sbep3IDOeWX7aQMG2oGGDIJ2e3lF/YwatWoaCplZNnp3ijapW30b4ptScttrm6cPL0Nh3A
        7tqrlmap7PRsr1x+joqCejQXRx+XXxxBQzZTCCdvoNS3GcLjdy0yA3Ibj/d+sZBTHs65D/IXRxupByq0
        QBZiJecnmmqpr0kEP9VOkRS1FsSR2lkLB8krbw7a0a2GQJSfUbOKTAlqB0ioUh4xofa2okFFNkoMKoNn
        W0MGtZfIB9gpPIA4+Pz94QuZIc1Re0kNbpulCur7dWoIP7050SqFk0T7H+8tk1v5EHayOTKw4MOfL36c
        s9R+eqlarPVudQ4lKZ9qM03RmUbFre7fliBHwBRY5eUaboM85lNEyI1BK7TO1vGHOOT84Pm7dTSGKL+q
        iBb5TUCrqAe1dRwiHbKseXURSKE2I03ATWr7cUPIX+KGGCmX2AAhFCrQg9sbDL4L6n2IeIlcIvvgOam/
        rGvht1Crlff2zp+ePXn1/uDw8PDg/ZOnp5thDNbRWjnyEoT6U+HPPzx5ffhs//cj0RkpabU2ITqqFXa4
        VnZ0k7j4b54cPNs/aolOlqh7LqawCTJAyvPjalArn797/eykJZrOUEeiVvkZNqMCvWaGeBMq/8HpUYUG
        KKCslgYBiAEJotwbkxgIWmeyUN9Dbe/p+2eyz7kQFVuFIuAtdIGpEAdeNgeqA34HyAFqex8O9qlhPRqY
        kepXsfL5gKDtmySEV5FvW5fa3hkEgMctTkYNiv7Ph4PeH8PJ6FFpbBgdY1z6tFuNRZNxt4iiHJ2vLQNo
        QPnNa2iAphVQdtG7YIXH/cnluOl5juO6tm1zoNtFpz60hBRU9o+81Jeson2HRyyXnzwjAUDLRTtZMOhP
        xr7nFFHwXM7M4b8YrjcuhAws9vOx+Kbsor5YM02ulT8cnJC3i+w/P9gddeo+Fd/M5RRA/0kBAFMplmTr
        wfAqNossolrz7eJLqJVfnLaYpakFsoDwYqdTd4ri4ZvTskMUaQx3jONRemtsZFsG7PQWUxCdTuXz1ydw
        HRbKxKzq7iOof1rvF6GY7ghfgFMGjXY1+ras8v52U9h7ekidyaQB1jUE4BfNnCGLuhSFO326vsomLjxD
        llFXJ0jQgT3Rxy5iYdi/9DyX/N8a8G6A62uFsMndSfRl2US7zR2USQKapWos6O00Gy43uWKkXN9SuDOM
        JPfFz9lGlmOjtb/UHcAR1GrvnlVQC4INhB/H0ABZvluBkPROAAeqsusuzMILs+wUny93BzUx1EwraCx/
        /Lnp2Lm1nr9Er/egZVZBHbmIG+2B/LpM8rq2LEncO/ulomkVleUvvjVc3QCyfGug+L8iOYIK9T0oj+L8
        Ib8ui6gvZIlnQVL85jnSAehAuGt4Ntd10zTXdIZkCbYRUD7JBl06SSkOqXIpvzNrpEcSJTyunR8eURFY
        eNX0EQglS2wB4pHvJApv94QahB2b00k2AkN2ZXCjdwmu8PHeKyTFqO2FV57DTRRC4abrO469jkOg4xtD
        Ua0OShCBYuRM/RIBIqsyaN0IjZDAi32mIRiGE0iAiqAouu2VPl58LBVlOWfQHX9GNqbi7lC1wgpKPlJm
        JNKmMba0rLYva60kNJJvRF5cfopgUBE64KIqQCbAbe/ymEqQv4STlyWVKNw2fvtnl6cSR7NYgjOwoAWu
        3JLTjQyPxzgqx2FBvKmdHxxRu0Aw7PrTUnG72c9HtZ5eQ5/ziwrvXqNm6CQy4O44RHrIquMko+TNfHZl
        8HtiCySD8tt9quvl+7qjK8Kb5bjplKqsQM2lGrtu56KtMYp7iTOuG7EMeBEiQDw5bhb1zZDBTKqMeEjD
        761eyUMuAENAEZHjfQpYgRoH4dgvGnOmkMsVJ6xgBU1dyAC275dChARr1+PpYAoZZFYIUz2gGnL5PdUO
        2WDUcJOUUPcmlmgyF+EeSd889g4kZJVkyODFEUks/NSYCZfQA5bZbvhED2rwhVqFhcNuUREqEN28N4QI
        RGcBRHBcVyjyzaCPKeg9imRg2nCHFusZzqzvFDKIvjF7TGNjbe8ASRGzLjo+NymcyXv3hlRhEjJgWjC2
        DZ74f0mTuhelDBQdydD1p4Yt9iQgLmQ2PYiGFtKQyn0VvnBwSXcvtMBE9pczIQJqOoIOoAT50aL0QKkH
        2DeSpTY7/7zyb9QvTfsRqVFGEblyrfz6yCogHtZtPVFhzrk/9QXUOmxN4miZRmmH2D2VgWL4Rf1G/DTt
        URRbM4n6FiL4cErBrDeGGZBnl0AEozzUQCiCpQaffF3uSaPk2lUI6DKSgQJXYsxVHoDpXkVfl01e1/be
        t+CvgkkbJq2jDFN0txSoBaEGUPbgkTP/eCPMxnEiAyLRpASnz1SpUBnk8PyZCjvoGXNRT0H1N4xs2LJU
        K3yE6uNCFMhAs74lMriJaTR6OCazMvj9CA85nNSpo2QGtzGQfky1WFgqLjIEQkH5mDVeqCMSU/GqGZYB
        CglPYMxW/Aje/kqOMCIcF+EOk6whDclAyxuit2kZ3M9neJYXMthg4kGR07kPclze2IVwLFWjUbxVY2Gd
        OYJkoOb9VXqgiN6WzGKxwdjXKRikH6Np+jtCR4QqVDv2oqAoETII6itl4PwpviyjUDWII6qnZaCgtkwt
        AKS8KuqKhr2ygCSD0JOfFpPtZmWVhW3kRcgJU7agcP9aJEcUMQY+tGCFEJT2MWODtvy0EO7lMxsTAJ71
        o+JMW6kCb9CGqxd7LVb1V0U9HC76Dnpe1Ha6mCJVLbMLns+uM2PtiqnX4Q+lM6g2V/kCQqFO5b7PV8jA
        kyLNLtX6TOg3uLsTDaKhfR17VcwDJuoLKhu6ovl5MXo3H10tq8DqL4vpZ6jY44BmpJEvgDuEnawUAjfr
        gcY+w2AWywAnu5PsD+C/oO6wGF5HfkiugCICXEWqBrEI02zmNVZa6jShHpRMZ1wGWtBJl8Dri/RQ1bRw
        nGpTW4o+ZizflR8WgDhLy+tE35VVNPankwiBFDfaHoxRR9BXWwIsQB8xLfSWH8W9i6gdJtNYYRMZgHjg
        JpwB1EBTC1pw2VSW2HgKU6ExJr3lKZLCO3TFjIMweFVURNs417vUGKAWLC0Y3axHLcJ0dik0yk834R72
        Zx+NhU3dJBlQZiBkoFk7K2tBEliA6f3M2ORmk/sUKFbmDUEkg2zokAxMd2TRUngQwxcnl2paXAY1vVGK
        tDQsICj8Jr8m62jBuEki8EO4AupP+LOx5sgrMfosaC+VQfMyn/ncYMpFHR6ePDjZAeu3zTUsQVAsWex4
        aVjg7WNaLWIjsNhOUXE+45VG4fXanC9rOpuDFz+jxrHUfTrDDPcrzIGEqFk0Agugtty1bx+GStDgBAoL
        I3eBDDgNTSjRMM3MR8YIJDFf/4WwSEOsw46d7mZYBY6ilvXO4jqjbncz3XYyB3Wk/Iz8GC9ByV1RDZ6H
        XGK1vegExdApNdgUh0jqSipAbUf5Tz7nNPhgHUzuXqqs7ywMIdzfwUU3RwYSVWVXq1sG59DdL4ztuItk
        oBTHqFBuHhqioizCmjR6LGjyeRnQR7cTbpwOCHor28hvQIOx2aCxoAnJpKFamymDizYNOV3PGRDuI2qP
        nHOJSs7UOUICMo0NpMC+tlc1EN+AOk8u5zqhqJ3erWd9KttSKgXW69rrj09XGgMWdm+Yj2E3r+UVN48C
        6pCDpruuLXBjHCxoP1H88fW0MWrzEDcelhzkuTCI1TZBgvIRGScziTJN82uMKEPeZDQtmNSFNdwiA7i+
        OiJjJz2Y3cxxm0bzyWttKpQvX3SLNGtVFmwxkAGHKRw3Yh9qKJzbbqeX/d6E21Cptns98nSUbZUYIAMa
        aTWM26QVyMBu7IRyLviGQwNT+4bDublaFxAA8+OoMw6GQUObxzR95WFA9hBe1W+Zy2eP80gSc1FHlKLo
        TvMjTWKS19hwIAEanns9EVJYqgo+qsYwhUhXuOtfhZDAxvvDGAuJAgpzPek6NgIlNazNJw2KXr8mU6Du
        OG7Xm0OSwIZWEVYA0w53x57DaaSKLHpCcUTjT3TOXadd6sMKNjcvWgFKRXNcr4z6zVYSxfRQJdhxi357
        PLyG1sCRPkBoxR9hEsFg91HT83zbjofr4ul3LNb7l7HTr1Lh6ZdIsjuL868jBpgGg9+uRqVms1v3CN/v
        DFn+56rIijdhNbC/iKZphcjWrSCsDgTVMKCeCNr3UKLhSuAW1EpBK6iFSpIBouRicTD58b8B8axVGrgL
        RMFpvX3hAf6bxLBly5YtW7Zs2bLlYSLWvl1G1AS0JO2VKTLxQxUEMTJtpmZ1T/WMWyt4Kq0GtAjUjeJb
        tio/UFFGdSv91fiie2p1RA0nyK8kWDzdRMOOmOBHZmct+GoaHHv3aOzPJi30sxz9szx0jj868gDDGCs/
        MtRMY8G/5QUiml/uZ3BCwTJcrgtsEL2bQlsMWvBwEcd1Pj3csJs/0J+K8vYdV16CcEc09OkeuG2cjRKt
        /XmTY7Hum8CgxuTvxrLYrp8a2qHw8b0sk6OxUTxLTywEfANz2aqnF/60n0UxnD9nHfxaaOy4LebSSgzT
        u5/xWmFbaDyhJIu+KIpdlBvNxpJpiMN40KZCA0++E4sV5mZMgcbx3fsDTWXDdnNcKn0rlUqP0uOxOTYS
        46YfrQCMe0v7bLynxe/k0fp3uwP6vXS248zNJl5mdn8rVv5/LkIR+ywWpmah2XU5cigfXHRocReSQUpP
        VaYF0OPp7cMdfGdQU5FP9Ot0blry7hL3+7ei5vEA6fZxT8kIIiXHm6JMyCELLBDjSkkPSA4FkTFBZXuN
        ZDqHszsjIBwzy00rx+WrXW5wfWbKk/3p7rMk+qEU0VVChbqStwMJKO7MdGz6LQ35NuELLQobnZGj9UFw
        hVX3r1F/bYJqBSXbNHjzf9MLqpjjOx+yhIQ9vm3NKqVmss8aJnLi8OtwspMwGcAdwJNHR/NuQL/gycKL
        mYMSJsMeRb2UOmjsiwNX4AzDbrrbtivs7i6BCsQPWAuTdY7E4kZpgquO57tucYrrdK4prZB6YI9oIaVg
        0qwnh8zgOnUal5coeoF99UzDsMeBNU45hB+IL38ZaKe8LQvuIA5USnpdQ5TuehwtmWpGszvxzyz+p4jn
        J2Ug3EFAY/eivnhKNGZGLSmmXixZ9PsUEVCZDjeMXPuaWek195R7XoH9S2rJ/OJOord0v8imaTNkQCMr
        FM5NTjPfJQa5A/YpmRlMAqDX9OpRvF2N1cCyLBrJa9Z3oRBDRx4BYBvykHthxh14/UQGFhvBcoXlo9hu
        g/C6OuQxRakjcvSSwXg5MzqqTQvrxNA09+iK8J4fEVTM4iUlKBdpGcAX3yNhN7FLvZ0eXd5ro7yk4wrN
        xvraE1zGGmzmOnAH1qg4tYwc9z9HB/WmS4XRqHehLBJUt8iThjTBbyCyhAjFHd/XuhDUoPOzFz9HRTfS
        MzAvqUIh7Fy3Y7/923RkPtSeBmGF9VgEOftyavjJhGcl54fimrADFhi6YfL2BS3YrcIXJ2spmOKHCe4D
        mrn3xYkn8SpwBwkhUhm5gyeqOiGXGGHQ6i8XqSHaCKwUbijlSMbv2+OpXC32yTWhLBM4A+QM+bFuJH5j
        LiDdJXBSbuzHZ5eCT9trvCM/tqcyUAwfzy49vduTAc6Kl0vDlf3PeOq0VWP9BuccYRHpIyVoo2Kq7nhv
        gUFjFp52LILkYdCD++ws2FH14hmvXB9BJkbi/vQ42Quns6DgTzwUjpZOLbAqnIFCqwlIaCyjPA5SvrfA
        kK4sIDswpo4JEd0aJ+0LenO64+fGNPwrQvWr7UQG9qgq2Z26AyTFdVpSkml5ypG5obj/OZZ+8/jKN6fy
        VMgMkZDcB6hCp+ouiTtALh16qNlE2+kGhUkj0Y3n7UE5yB04qWyv2fXrIoD604OQUhgiO4AYaOlRI2fb
        XRzheQ2v0UQGFR0GGeil/P3IQFPT2QH348oCSnzRiGVA7oBkoAo/JrdBq5Ed/EqLCE5BDiXOgMqLzzAP
        pUjrqVD15GsdLlYXx8hsUjeSZUZ1BIYkKt8t6dlHtAqQBLfzGU9c7MP9Ykfk2kMvcaDFESoCzfSis0iN
        I7h8xRsHgZDCIv3yAgQATyqmR2FfDklzLANuwmbuhRl3kNONOEarVj5eCVNRzE4Q/S7nbCREdlBtx7pi
        GKKJmJrhuGiMoxGctiu9KeXI3DRMnVSFBAAo8xanCg2C74zkfMdQRVbeBRBqG2EhAMitkEHSqDBJeQ+K
        hP04dtASOlEr3CyXFVzTYkOPyk6/W5HCTQyLc/fPVIp6h2hW+lckGjPZwVQGpq6TO8DtqTNNDZyaEnfc
        uBSGt3j+HjUnUY6sc737cTdNP3EmJAP43XuRQdhNCkULvU5zXfpBMbkZ90cBgFbEgDuIlZeaEiuWb8fu
        jxsBJYnUjSmLAt2htVRoYSHDNoybqwIdp1ftt0vi19/unl49zvpyyjiImtdAyh3kFOpLivb0koVOFGo7
        qLapWh2B+ImUK0KNXrBB05AkWjswIR1CSzXTEYm9Ad0L7kcGX+LsX6EfDUiUMUwth2T/R25kn+NEGVoj
        sgP5CSz8DbYgJOn1Pd007U6IMqa7k6AeqeQi17ifwJCyb9NEdpC0flYbcjsinjE+jtK/oS9msAhoyS+2
        m/45lmZ/EB0mGQwurv5dhWEMkI4rvC6WFpntUkutxg0Z3P38L3rkoSfy4SiUT2s8AuQNeORih4m45dDo
        /AZ0gzIAnMGpo1FjQzgNEgIdBWWmwxz5h/56HqUQwZjWY0R9YL5/vYAcRH4FXbP4I912fw1yV/2k59Pk
        qaZd1VJLyGBExivuEH8VnTfjBJBTmSz2h0MZlEAWJAai0zktGpofFSFO2w8WDDGADBJs+s2muwU+C44v
        vvFUhUlw0UY2Qz4haifVEb2cX5OkUOTVavX/kpZD2kVHRuDVoBU44Q8dJEPCW9xwefl0M14uV7/z9nUI
        vV+nZE4XgwmMYlw3BLDij23HjUclQCf09uS6HY1TwH9FDzIo0EHURSs24oXGUyTYjV1mffaw17ahNskA
        nim9Op0ooGt4d159VrX85aOEb99KaVvADVd3R3JfRJ/9I3XCN7rhAht8nD1oBlxxWIreflswpiV/+S3a
        KfkmVpC6U+JkQIAP6c+yW2T2EJroGW2h6E8HzOy/gcgRpty09bktOHT15f4GaHSZHJ9HPYYzC+FTYxdS
        HfoZpuhOaSd1Gcu+RZwrBtjhdKoZq/FhtD/6Q6dCnbCTWFQ6WqZWXDE6GRklvWzZsmXLli1btmzZsmXL
        li1btmzZsmXL3wdj/w9fM+oaFSxxJQAAAABJRU5ErkJggg==
</value>
  </data>
</root>